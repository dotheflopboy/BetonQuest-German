{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"hello world","title":"\ud83d\ude80 Home"},{"location":"Documentation/Events-List/","text":"Events List Cancel quest: cancel Dieses Event funktioniert genauso wie ein Quest-Abbrecher im Rucksack . Das Ausf\u00fchren ist gleichbedeutend damit, dass der Spieler auf den Knochen klickt. Das einzige Argument ist der Name eines Questabbrechers, wie im Abschnitt cancel definiert Example cancel wood Chat player message chat Dieses Event sendet die angegebene Nachricht als Spieler. Daher sieht es so aus, als h\u00e4tte der Spieler die Nachricht gesendet. Du kannst in diesem Event nur %player% als Variable verwenden. Zus\u00e4tzliche Nachrichten k\u00f6nnen definiert werden, indem sie mit | getrennt werden. Wenn du | in der Nachricht werden willst nutze \\| . Wenn ein Plugin nicht mit dem sudo / command-Event funktioniert, musst du dieses Event verwenden. Example sendMSG : \"chat Hallo!\" sendMultipleMSGs : \"chat Hey %player%|ban %player%|pardon %player%\" sendPluginCommand : \"chat /someCommand x y z\" Chest Clear: chestclear persistent , static Dieses Event entfernt alle Gegenst\u00e4nde aus einer Truhe an einem bestimmten Ort. Das einzige Argument ist ein Standort. Example chestclear 100;200;300;world Chest Give: chestgive persistent , static Dies funktioniert genauso wie das give Event, aber es legt die Gegenst\u00e4nde in einer Truhe an einer bestimmten Stelle ab. Das erste Argument ist ein Ort, das zweite Argument ist eine Liste von Elementen, wie im give Event. Wenn die Truhe voll ist, werden die Gegenst\u00e4nde auf den Boden fallen gelassen. Die Truhe kann jeder andere Block mit Inventar sein, z. B. ein Trichter oder ein Spender. BetonQuest protokolliert einen Fehler in der Konsole, wenn dieses Ereignis ausgel\u00f6st wird, sich aber an der angegebenen Position keine Truhe befindet. Example chestgive 100;200;300;world emerald:5,sword Chest Take: chesttake persistent , static Dieses Event funktioniert genauso wie das Take Event, aber es nimmt Gegenst\u00e4nde aus einer Truhe an einem bestimmten Ort. Es wird genau so definiert wie das chestgive Event. Example chesttake 100;200;300;world emerald:5,sword Clear entities: clear Dieses Event entfernt alle angegebenen Mobs aus dem angegebenen Bereich. Das erste erforderliche Argument ist eine Liste von Mobs (ausgesucht von here ) durch Kommata abgetrennt. Als n\u00e4chstes kommt der Standort. Danach folgt der Radius um den Standort (eine positive Zahl oder eine Variable). Optional kannst du das Argument name: angeben, gefolgt vom Namen, den entfernte Mobs haben m\u00fcssen. Du kannst das marked: Argument nutzen, um nur Mobs zu entfernen, die im Spawn Event markiert sind. Example clear ZOMBIE,CREEPER 100;200;300;world 10 name:Monster Compass: compass Mit diesen Event kannst du ein Kompass-Ziel f\u00fcr den Spieler setzen oder l\u00f6schen. You may also directly set the player's compass destination as well. Wenn ein Ziel hinzugef\u00fcgt wird, kann der Spieler einen bestimmten Ort als Ziel seines Kompasses ausw\u00e4hlen. Um das Ziel auszuw\u00e4hlen, muss der Spieler seinen Rucksack \u00f6ffnen und auf das Kompasssymbol klicken. Das erste Argument ist add , del oder set , und der zweite ist der Name des Ziels, wie im Abschnitt compass definiert. Beachte: Wenn du ein Ziel setzt, wird es nicht automatisch als Ziel-Wahl des Spielers gesetzt. Das Ziel muss im Abschnitt compass definiert sein. Du kannst f\u00fcr jede Sprache einen eigenen Ziel-Namen setzten oder einen allgemeinen Namen setzen, und optional ein eigenes item hinzuf\u00fcgen (aus dem items Abschnitt) welches im Rucksack angezeigt wird. Beispiel f\u00fcr ein Kompassziel: compass : beton : name : de : Ziel en : Target pl : Cel location : 100;200;300;world item : scroll Example compass add beton Command: command persistent , static F\u00fchrt den angegebenen Befehl von der Konsole aus. Gebe den Befehl OHNE Schr\u00e4gstrich an. Du kannst hier Variablen verwenden, aber andere Variablen als %player% werden nicht funktionieren, wenn das Event von einen verz\u00f6gerten folder Event ausgel\u00f6st wird und der Spieler offline ist. Du kannst zus\u00e4tzliche Befehle definieren, indem du sie mit dem Zeichen | trennst. Wenn du das Zeichen | in einen Befehl verwenden willst nutze \\| . Suchst du nach f\u00fchre ein Befehl aus Spieler aus ? Example command kill %player%|ban %player% Conversation: conversation Startet ein Gespr\u00e4ch am Standort des Spielers. Das einzige Argument ist die ID der Konversation. Dies umgeht die Konversations-Permission! Example conversation village_smith Damage player: damage Verletzt den Spieler um die angegebene Schadensmenge. Das einzige Argument ist eine Zahl (kann Gleitkommazahlen haben). Example damage 20 Delete Point: deletepoint persistent , static L\u00f6schst die Spielerpunkte in einer bestimmten Kategorie. Example deletepoint npc_attitude Door: door persistent , static Dieses Event kann T\u00fcren, Fallt\u00fcren und Zauntore \u00f6ffnen und schlie\u00dfen. Die Syntax ist genau dieselbe wie im obigen lever Event. Example door 100;200;300;world off Remove Potion Effect: deleffect Entfernt die angegebenen Trankeffekte vom Spieler. Nutze any anstelle einer Liste von Typen, um alle Trankeffekte vom Spieler zu entfernen. Example deleffect ABSORPTION,BLINDNESS Potion Effect: effect F\u00fcgt dem Spieler einen bestimmten Trankeffekt hinzu. Das erste Argument ist der Tranktyp. Sie finden alle verf\u00fcgbaren Typen hier . Das zweite Argument ist eine Ganzzahl, die definiert, wie lange der Effekt in Sekunden anh\u00e4lt. Das dritte Argument, ebenfalls ganzzahlig, definiert die St\u00e4rke des Effekts (1 bedeutet erstes Level). F\u00fcge einen Parameter ambient hinzu, um Trankpartikel unsichtbarer erscheinen zu lassen (genauso wie Beacon-Effekte). Um Partikel zu verbergen, f\u00fcgen Sie einen Parameter hidden hinzu. Um das Symbol f\u00fcr den Effekt auszublenden, f\u00fcgen Sie noicon hinzu. Example effect BLINDNESS 30 1 ambient icon Explosion: explosion static Erzeugt eine Explosion. Es kann Feuer machen und Bl\u00f6cke zerst\u00f6ren. Du kannst auch die Leistung definieren, also achte darauf, deinen Server nicht wegzublasen. Die Standard-TNT-Leistung ist 4, w\u00e4hrend Wither bei der Sch\u00f6pfung 7 ist. Das erste Argument kann 0 oder 1 sein und gibt an, ob die Explosion Feuer erzeugen wird (wie Geister Feuerball). Das zweite Argument ist auch 0 oder 1, aber dies definiert, ob der Block zerst\u00f6rt wird oder nicht. Das dritte Argument ist die Leistung (Float-Zahl). Das letzte Argument ist der Ort. Example explosion 0 1 4 100;64;-100;survival Folder: folder persistent , static Es ist so etwas wie ein Container f\u00fcr mehrere Events. Du kannst es verwenden, um deinen Code zu versch\u00f6nern. Es verf\u00fcgt auch \u00fcber eine optionale Verz\u00f6gerung und einen in Sekunden gemessenen Zeitraum (Du kannst Ticks oder Minuten verwenden, indem du ticks oder minutes Argument hinzuf\u00fcgst). Es ist Konstant f\u00fcr Events markiert als persistent , was bedeutet, dass die Events auch nach dem Abmelden des Spielers ausgel\u00f6st werden. Beachten jedoch, dass alle Bedingungen falsch sind, wenn der Spieler offline ist (auch invertierte), diese Events sollten also nicht durch irgendwelche Bedingungen blockiert werden! Das einzige erforderliche Argument ist eine durch Kommas getrennte Liste von Events. Es gibt auch drei optionale Argumente: delay: , period: und random: . Delay und Period ist eine Anzahl von Sekunden. Delay ist die Zeit vor der Ausf\u00fchrung und period ist die Zeit zwischen den einzelnen Events. Es ist optional und es leer zu lassen ist dasselbe wie delay:0 oder period:0 . Random ist die Anzahl der Events, die zuf\u00e4llig zum Ausl\u00f6sen ausgew\u00e4hlt werden. Es ist optional und wenn du es leer l\u00e4sst oder wegl\u00e4sst, werden alle Events ausgel\u00f6st. Example folder event1,event2,event3 delay:5 period:5 random:1 Give Items: give Gibt dem Spieler vordefinierte Gegenst\u00e4nde. Sie werden genau so angegeben wie im item Abschnitt definiert. Es k\u00f6nnen mehrere Gegenst\u00e4nde auf einmal gegeben werden, indem man sie mit einen Komma trennt, au\u00dferdem kann jeder Gegenstand eine Anzahl haben angegeben durch : gefolgt von der Anzahl nach den Gegenstand. Die Standard-Anzahl ist 1. Wenn der Spieler nicht den erforderlichen Platz im Inventar hat, werden die Gegenst\u00e4nde auf den Boden fallen gelassen, es sei denn, es handelt sich um Questgegenst\u00e4nde. Dann werden sie in den Rucksack gesteckt. Du kannst dan Parameter notify angeben, um dem Spieler eine einfache Nachricht \u00fcber den Erhalt von Gegenst\u00e4nden anzuzeigen. Example give emerald:5,emerald_block:9 Give journal: givejournal Dieses Event gibt dem Spieler einfach sein Tagebuch. Es verh\u00e4lt sich genauso wie der Befehl /j . Example givejournal Global point: globalpoint persistent , static Dies funktioniert auf die gleiche Weise wie das normale Punkte-Event, aber anstatt die Punkte f\u00fcr eine Kategorie eines bestimmten Spielers zu manipulieren, manipuliert es Punkte in einer globalen Kategorie. Diese globalen Kategorien sind Spieler unabh\u00e4ngig, so kannst du zum Beispiel jedes Mal, wenn ein Spieler eine Quest macht, einen Punkt zu einer solchen globalen Kategorie hinzuf\u00fcgen und dem 100. Spieler, der die Quest macht, einige besondere Belohnungen geben. Example globalpoint global_knownusers 1 Global tag: globaltag persistent , static Funktioniert genauso wie ein normales Tag-Event, aber anstatt ein Tag f\u00fcr einen Spieler zu setzen, wird es global f\u00fcr alle Spieler gesetzt. Example globaltag add global_areNPCsAgressive If else: if Dieses Event pr\u00fcft eine Bedingung und f\u00fchrt je nach Ergebnis das erste oder zweite Event aus. Wird folgenderma\u00dfen definiert: if condition event1 else event2 , wobei condition eine Bedingung-ID ist und event1 und event2 Event-IDs sind. Das else Parameter ist ohne praktischen Grund zwischen den Events obligatorisch. Example if sonnig lass_es_regnen else lass_es_sonnig_sein Journal: journal static F\u00fcgt einen Eintrag zum/aus dem Tagebuch eines Spielers hinzu oder l\u00f6scht ihn. Tagebucheintr\u00e4ge m\u00fcssen im Abschnitt journal definiert werden. Das erste Argument ist die auszuf\u00fchrende Aktion, der zweite ist der Name des Eintrags, falls erforderlich. Tagebucheintr\u00e4ge \u00e4ndern wird auch das Journal neu laden. M\u00f6gliche Aktionen sind: - add : F\u00fcgt dem Tagebuch eine Seite hinzu. - delete : L\u00f6scht eine Seite aus dem Tagebuch - update : L\u00e4d das Tagebuch neu. Dies ist besonders n\u00fctzlich, wenn du die Hauptseite aktualisieren musst. Example journal add quest_started journal delete quest_available journal update Kill: kill T\u00f6tet den Spieler. Nichts anderes. Kill Mobs: killmob persistent , static T\u00f6tet alle Mobs des angegebenen Typs am Ort. Erstes Argument ist die Art des Mobs . Das n\u00e4chste Argument ist der Ort. Drittes Argument ist der Radius um den Ort, in dem sich die Mobs aufhalten m\u00fcssen, um get\u00f6tet zu werden. Du kannst auch das Argument name: angeben, gefolgt vom Namen des Mobs, der get\u00f6tet werden soll. Alle _ -Zeichen werden durch Leerzeichen ersetzt. Wenn du nur Mobs t\u00f6ten m\u00f6chtest, die mit dem Spawn-Mob-Event markiert wurden, verwende marked: Argument gefolgt vom Schl\u00fcsselwort. Mit diesem Event k\u00f6nnen nur Mobs get\u00f6tet werden, die sich in geladenen Chunks befinden. Example killmob ZOMBIE 100;200;300;world 40 name:Bolec Language Event: language Dieses Event \u00e4ndert die Sprache des Spielers in die angegebene Sprache. Es gibt nur ein Argument, den Sprachnamen. Example language en Lever: lever persistent , static Dieses Event kann einen Hebel umschalten. Das erste Argument ist ein Ort und das zweite ein Zustand: on , off oder toggle . Example lever 100;200;300;world toggle Lightning: lightning static Schl\u00e4gt an einem bestimmten Ort einen Blitz ein. Einziges Argument ist der Standort. Example lightning 100;64;-100;survival Notification: notify Zeigt eine Benachrichtigung mit dem NotifyIO-System an. Warning Alle Doppelpunkte ( : ) im Nachrichtenteil der Benachrichtigung m\u00fcssen maskiert werden, einschlie\u00dflich der Variablen. Ein Backslash ( \\ ) ist erforderlich, wenn \u00fcberhaupt keine Anf\u00fchrungszeichen ( ... ) verwendet werden oder einfache Anf\u00fchrungszeichen ( ... ). Zwei Backslash sind erforderlich ( \\\\ ) bei Verwendung von doppelten Anf\u00fchrungszeichen ( \"...\" ). Examples: eventName: notify Peter:Heya %player%! :arrow_right: eventName: notify Peter{++\\++}:Heya %player%! eventName: {=='==}notify Peter:Heya %player%!{=='==} :arrow_right: eventName: {=='==}notify Peter{++\\++}:Heya %player%!{=='==} eventName: {==\"==}notify Peter:Heya %player%!{==\"==} :arrow_right: eventName: {==\"==}notify Peter{++\\\\++}:Heya %player%!{==\"==} otherEvent: notify You own %math.calc:5% fish! :arrow_right: otherEvent: You own %math.calc{++\\++}:5% fish! Option Beschreibung message Die Nachricht, die angezeigt wird. Unterst\u00fctzt Variablen und \u00dcbersetzungen. Erforderlich, muss zuerst sein category L\u00e4dt alle Einstellungen aus dieser Benachrichtigungskategorie. Kann eine durch Kommas getrennte Liste sein. Die erste vorhandene Kategorie wird verwendet. Optional io irgendeine NotifyIO . \u00dcberschreibt die \u201eKategorie\u201c-Einstellungen. Optional NotifyIO Jede Einstellung aus dem definierten NotifyIO. Kann mehrfach verwendet werden. \u00dcberschreibt die \u201eKategorie\u201c-Einstellungen. Optional Die Standard NotifyIO ist chat , wenn kein anderes Argument als message angegeben ist. message ist das einzige Argument dieses Event, das nicht Schl\u00fcssel:Wert basierent ist. Du kannst dort beliebigen Text mit Leerzeichen hinzuf\u00fcgen. Es erm\u00f6glicht dir auch, mehrere \u00dcbersetzungen mit einer speziellen Syntax bereitzustellen: example : \"notify {en} ABC {de} DEF\" Der Wert in {} ist der Sprach-K\u00fcrzel definiert in der messages.yml. Jeder Text zwischen den Sprach-K\u00fcrzeln geh\u00f6rt zur Sprache des vorherigen Sprach-k\u00fcrzel. Zwischen dem Sprach-k\u00fcrzel und der Nachricht muss ein Leerzeichen stehen. In diesem Beispiel w\u00fcrden englische Benutzer ABC und deutsche DEF sehen. Beispiele: Sehe dir die Dokumentation zu Notify Categories und Notify IO options an. Du musst beides verstehen, wenn du das Notify-System in vollem Umfang nutzen m\u00f6chtest. #Das einfachste aller Notify-Event nur eine Chat-Nachricht: customEvent : \"notify Hallo %player%!\" #Es ist dasselbe wie oben, da `chat` die Standard-IO ist. theSame : \"notify Hallo %player%! io:chat\" #Dieser zeigt einen Titel und einen Untertitel an: myTitle : \"notify Dies ist ein Titel.\\nDies ist ein Untertitel. io:title\" #Spielt eine sound: mySound : \"notify io:sound sound:x.y.z\" #Dieses Event nutzt die Bossbar NachrichtIO mit der Option der Balkenfarbe und einen sound: myBar : \"notify Dies ist eine benutzerdefinierte Nachricht. io:bossbar barColor:red sound:block.anvil.use\" #Einige Events mit Kategorien. myEvent1 : \"notify Dies ist eine benutzerdefinierte Nachricht! category:info\" myEvent2 : \"notify Dies ist eine benutzerdefinierte Nachricht! category:firstChoice,secondChoice\" #Du kannst auch Kategorieeinstellungen \u00fcberschreiben: myEvent3 : \"notify Eine andere Nachricht! category:info io:advancement frame:challenge\" #Nutze mehrere Sprachen: mehrereSprachen : \"notify {en} Hello english person! {de} Hallo deutsche Person! {es} Hola espa\u00f1oles!\" Broadcast: notifyall Dieses Event funktioniert genauso wie notify Event, zeigt aber die Benachrichtigung f\u00fcr alle Online-Spieler an. Objective: objective persistent , static Manages the objectives. Syntax is objective <action> name , where <action> can be start / add (one of the two), delete / remove or complete / finish . Name is the name of the objective, as defined in the objectives section. Using this in static contexts only works when removing objectives! Example objective start wood OPsudo: opsudo Dieses Event ist \u00e4hnlich wie das sudo Event, der einzige Unterschied ist, dass es ein Befehl als Spieler mit tempor\u00e4re OP-Berechtigungen ausf\u00fchrt. Zus\u00e4tzliche Befehle k\u00f6nnen definiert werden, indem sie mit | getrennt werden. Wenn du ein | -Zeichen in der Nachricht verwenden m\u00f6chtest, verwende \\| . Suchst du nach f\u00fchre ein Befehl als normaler Spieler aus ? Suchst du nach f\u00fchre Befehle von der Konsole aus ? Example opsudo spawn Party event: party F\u00fchrt die angegebene Liste von Events (drittes Argument) f\u00fcr jeden Spieler in einer Party aus. Weitere Informationen zu Partys finden Sie im Kapitel party im Reference Abschnitt. Example party 10 has_tag1,!has_tag2 give_reward Pick random: pickrandom persistent , static Ein weiterer Container f\u00fcr Events. Es w\u00e4hlt ein (oder mehrere) der gegebenen Events und f\u00fchrt sie aus. Du musst angeben wie wahrscheinlich es ist das jeweilige Event zu bekommen, indem du einen Prozentwert vor der Event-ID setzt. Dieses Event funktionert auch mit einem Gesamtprozentwert \u00fcber 100%. Es w\u00e4hlt Standardm\u00e4\u00dfig ein Event aus der Liste, aber du kannst das Argument amount: angeben, wenn du willst, dass mehrere ausgew\u00e4hlt werden. Beachte das nur so viele Events wie vorhanden ausgew\u00e4hlt werden k\u00f6nnen und amount:0 macht nichts. Es m\u00fcssen zwei %% vor dem Event-Name stehen, wenn Variablen verwendet werden, eins ist von der Variable und das andere ist von der Event-Syntax. Example pickrandom 20.5%event1,0.5%event2,79%event3 amount:2 pickrandom %point.factionXP.amount%%event1,0.5%event2,79%event3,1%event4 amount:3 Point: point persistent Gibt dem Spieler eine bestimmte Anzahl von Punkten in einer bestimmten Kategorie. Der Betrag kann negativ sein, wenn Sie Punkte abziehen m\u00f6chten. Sie k\u00f6nnen auch ein Sternchen zum Multiplizieren verwenden (oder Division, wenn Sie einen Bruch verwenden). Das erste Argument nach dem Event-Namen muss eine Kategorie sein, und das zweite - die Anzahl der Punkte, die vergeben/genommen/multipliziert werden sollen. Dieses Event unterst\u00fctzt auch ein optionales notify Argument, das Informationen \u00fcber die \u00c4nderung mithilfe des Benachrichtigungssystems anzeigt. Example point npc_attitude 10 Example point village_reputation *0.75 Run events: run persistent , static Mit diesem Event kannst du mehrere Anweisungen in einer angeben. Jede Anweisungen muss mit einem ^ Zeichen starten (es trennt alle Anweisungen). Es ist nicht dasselbe wie das folder Event, weil du die eigentliche Anweisung angeben musst, nicht nur den Event-Namen. Es wird auch beim selben Tick gefeuert, nicht beim n\u00e4chsten wie bei folder . Verwenden Sie hier keine Bedingungen, es verh\u00e4lt sich seltsam. Wir werden dies in 2.0 beheben. Example run ^tag add beton ^give emerald:5 ^entry add beton ^kill Scoreboard: score Dieses Event funktioniert genauso wie das point -Event, der einzige Unterschied besteht darin, dass es Scoreboards anstelle von Punkten verwendet. Sie k\u00f6nnen Punktzahlen in Zielen auf der Anzeigetafel addieren, subtrahieren, multiplizieren und dividieren. Das erste Argument ist der Name des Ziels, das zweite eine Zahl. Es kann positiv f\u00fcr die Addition, negativ f\u00fcr die Subtraktion oder mit einem vorangestellten Sternchen f\u00fcr die Multiplikation sein. Das Multiplizieren mit Br\u00fcchen ist dasselbe wie das Dividieren. Example score kills 1 Set Block: setblock persistent , static \u00c4ndert den Block an der angegebenen Position. Das erste Argument ist ein Block , das zweite ein Ort. Sehr m\u00e4chtig, wenn es zum Ausl\u00f6sen von Redstone-Apparaten verwendet wird. Example setblock REDSTONE_BLOCK 100;200;300;world Spawn Mob: spawn persistent , static Spawnt eine bestimmte Anzahl von Mobs eines bestimmten Typs am Ort. Das erste Argument ist ein Standort. Das n\u00e4chste ist die Art des Mobs . Das letzte, dritte Argument ist eine Ganzzahl f\u00fcr die Menge der zu spawnenden Mobs. Sie k\u00f6nnen auch das Argument name: angeben, gefolgt vom Namen des Mobs. Alle _ Zeichen werden mit Leerzeichen ersetzt. Sie k\u00f6nnen den gespawnten Mob auch mit einem Schl\u00fcsselwort markieren, indem Sie das Argument marked: verwenden. Es wird nirgendwo angezeigt, und Sie k\u00f6nnen im Ziel mobkill nun nach markierten Mobs suchen. Sie k\u00f6nnen die R\u00fcstung angeben, die der Mob tragen wird, und die Gegenst\u00e4nde, mit denen er ausgestattet ist h: (Helm), c: (Brustpanzer), l: (Hose), b: (Schuhe), m: (Haupt Hand) and o: (Neben Hand) optionale Argumente. Dies nimmt ein Gegenstand ohne die Anzahl, so wie in dem items Abschnitt definiert. Du kannst auch eine Liste von fallen gelassenen Gegenst\u00e4nden mit dem Argument drops: definieren, gefolgt von einer Liste mit Gegenst\u00e4nden mit Anzahl nach Doppelpunkt, geteilt durch Komma. Example spawn 100;200;300;world SKELETON 5 marked:targets Example spawn 100;200;300;world ZOMBIE name:Bolec 1 h:blue_hat c:red_vest drops:emerald:10,bread:2 Sudo: sudo Dieses Event ist \u00e4hnlich wie das command Event, der einzige Unterschied ist, dass es einen Befehl als Spieler ausl\u00f6st (oft als Spielerbefehle bezeichnet). Zus\u00e4tzliche Befehle k\u00f6nnen definiert werden, indem sie mit | getrennt werden. Wenn du das Zeichen | in einen Befehl nutzen willst nutze \\| . Suchst du nach f\u00fchre einen Befehl als OP aus ? Suchst du nach Konsolen Befehl ? Example sudo spawn Tag: tag persistent , static Dieses Event f\u00fcgt dem Spieler ein Tag hinzu (oder entfernt es). Das erste Argument nach dem Namen des Events muss add oder del sein. Als n\u00e4chstes kommt der Tag-Name. Es darf keine Leerzeichen enthalten ( _ jedoch ist okay). Zus\u00e4tzliche Tags k\u00f6nnen durch Kommas getrennt (ohne Leerzeichen) hinzugef\u00fcgt werden. Example tag add quest_started,new_entry Take Items: take Entfernt Gegenst\u00e4nde aus dem Inventar, den R\u00fcstungsf\u00e4chern oder dem Rucksack des Spielers. Die Gegenst\u00e4nde selbst m\u00fcssen im Abschnitt items definiert werden, optional mit Anzahl nach einem Doppelpunkt. Welche Inventar typen gepr\u00fcft werden, wird durch invOrder: definiert. Du kannst Backpack , Inventory , Offhand und Armor hier verwenden. Sind mehrere Typen definiert, wird nacheinander gepr\u00fcft. Danger Hinweis: Wenn es sich bei den Items nicht um Quest-Items handelt, verwenden Sie in Gespr\u00e4chen kein take -Event mit Spieleroptionen! Der Spieler kann Gegenst\u00e4nde fallen lassen, bevor er die Option ausw\u00e4hlt, und sie nach dem Ausl\u00f6sen des Events aufheben. Best\u00e4tigen Sie es anhand der Reaktion des NPCs! Du kannst auch das Schl\u00fcsselwort notify angeben, um dem Spieler eine einfache Nachricht \u00fcber den Verlust von Gegenst\u00e4nden anzuzeigen. Example take emerald:120,sword take nugget:6 notify take wand notify invOrder:Backpack take money:50 invOrder:Backpack,Inventory take armor invOrder:Armor,Offhand,Inventory,Backpack Time: time Stellt die Zeit ein oder f\u00fcgt sie hinzu. Das einzige Argument ist die festzulegende Zeit (Ganzzahl) oder die hinzuzuf\u00fcgende Zeit (Ganzzahl mit vorangestelltem +), in 24 Stunden Format. Das Subtrahieren von Zeit erfolgt durch Hinzuf\u00fcgen von mehr Zeit (wenn Sie daran denken, macht es tats\u00e4chlich Sinn). Minuten k\u00f6nnen mit Flie\u00dfkomma erreicht werden. Example time +6 Teleport: teleport Teleportiert den Spieler an einen bestimmten Ort, mit oder ohne Kopfdrehung. Es wird auch das Gespr\u00e4ch beenden, wenn der Spieler eins aktiv hat. Das erste und einzige Argument muss der Ort sein. Es ist eine gute Idee hier yaw und pitch zu verwenden. Example teleport 123;32;-789;world_the_nether;180;45 Variable: variable Dieses Event hat nur einen Zweck: Werte \u00e4ndern, die in variable Ziele gespeichert sind. Das erste Argument ist die ID des variable Ziels. Das zweite Argument ist der Name der zu setzenden Variablen. Das dritte Argument ist die Wert zum einzustellen. Sowohl der Name als auch der Wert k\u00f6nnen %...% -Variablen verwenden. Um eine Variable zu l\u00f6schen, k\u00f6nnen Sie \"\" verwenden. Sieh dir die variable objective Dokumentation f\u00fcr weitere Informationen zum Speichern von Variablen an. Dieses Event hat keine Auswirkung, wenn dem Spieler nicht bereits ein variable Ziel zugewiesen wurde. Example variable CustomVariable MyFirstVariable Goodbye! variable variable_objectiveID name %player% variable other_var_obj desc \"\" Weather: weather Stellt das Wetter ein. Das Argument ist sun , rain oder storm . Example weather rain Give experience: experience Gibt dem Spieler die angegebene Menge an Erfahrungspunkten. Du kannst auch ganze Level geben, idem du das Argument level hinzuf\u00fcgst. Example experience 4 level","title":"\ud83d\udcda Documentation"},{"location":"Documentation/Events-List/#events-list","text":"","title":"Events List"},{"location":"Documentation/Events-List/#cancel-quest-cancel","text":"Dieses Event funktioniert genauso wie ein Quest-Abbrecher im Rucksack . Das Ausf\u00fchren ist gleichbedeutend damit, dass der Spieler auf den Knochen klickt. Das einzige Argument ist der Name eines Questabbrechers, wie im Abschnitt cancel definiert Example cancel wood","title":"Cancel quest: cancel"},{"location":"Documentation/Events-List/#chat-player-message-chat","text":"Dieses Event sendet die angegebene Nachricht als Spieler. Daher sieht es so aus, als h\u00e4tte der Spieler die Nachricht gesendet. Du kannst in diesem Event nur %player% als Variable verwenden. Zus\u00e4tzliche Nachrichten k\u00f6nnen definiert werden, indem sie mit | getrennt werden. Wenn du | in der Nachricht werden willst nutze \\| . Wenn ein Plugin nicht mit dem sudo / command-Event funktioniert, musst du dieses Event verwenden. Example sendMSG : \"chat Hallo!\" sendMultipleMSGs : \"chat Hey %player%|ban %player%|pardon %player%\" sendPluginCommand : \"chat /someCommand x y z\"","title":"Chat player message chat"},{"location":"Documentation/Events-List/#chest-clear-chestclear","text":"persistent , static Dieses Event entfernt alle Gegenst\u00e4nde aus einer Truhe an einem bestimmten Ort. Das einzige Argument ist ein Standort. Example chestclear 100;200;300;world","title":"Chest Clear: chestclear"},{"location":"Documentation/Events-List/#chest-give-chestgive","text":"persistent , static Dies funktioniert genauso wie das give Event, aber es legt die Gegenst\u00e4nde in einer Truhe an einer bestimmten Stelle ab. Das erste Argument ist ein Ort, das zweite Argument ist eine Liste von Elementen, wie im give Event. Wenn die Truhe voll ist, werden die Gegenst\u00e4nde auf den Boden fallen gelassen. Die Truhe kann jeder andere Block mit Inventar sein, z. B. ein Trichter oder ein Spender. BetonQuest protokolliert einen Fehler in der Konsole, wenn dieses Ereignis ausgel\u00f6st wird, sich aber an der angegebenen Position keine Truhe befindet. Example chestgive 100;200;300;world emerald:5,sword","title":"Chest Give: chestgive"},{"location":"Documentation/Events-List/#chest-take-chesttake","text":"persistent , static Dieses Event funktioniert genauso wie das Take Event, aber es nimmt Gegenst\u00e4nde aus einer Truhe an einem bestimmten Ort. Es wird genau so definiert wie das chestgive Event. Example chesttake 100;200;300;world emerald:5,sword","title":"Chest Take: chesttake"},{"location":"Documentation/Events-List/#clear-entities-clear","text":"Dieses Event entfernt alle angegebenen Mobs aus dem angegebenen Bereich. Das erste erforderliche Argument ist eine Liste von Mobs (ausgesucht von here ) durch Kommata abgetrennt. Als n\u00e4chstes kommt der Standort. Danach folgt der Radius um den Standort (eine positive Zahl oder eine Variable). Optional kannst du das Argument name: angeben, gefolgt vom Namen, den entfernte Mobs haben m\u00fcssen. Du kannst das marked: Argument nutzen, um nur Mobs zu entfernen, die im Spawn Event markiert sind. Example clear ZOMBIE,CREEPER 100;200;300;world 10 name:Monster","title":"Clear entities: clear"},{"location":"Documentation/Events-List/#compass-compass","text":"Mit diesen Event kannst du ein Kompass-Ziel f\u00fcr den Spieler setzen oder l\u00f6schen. You may also directly set the player's compass destination as well. Wenn ein Ziel hinzugef\u00fcgt wird, kann der Spieler einen bestimmten Ort als Ziel seines Kompasses ausw\u00e4hlen. Um das Ziel auszuw\u00e4hlen, muss der Spieler seinen Rucksack \u00f6ffnen und auf das Kompasssymbol klicken. Das erste Argument ist add , del oder set , und der zweite ist der Name des Ziels, wie im Abschnitt compass definiert. Beachte: Wenn du ein Ziel setzt, wird es nicht automatisch als Ziel-Wahl des Spielers gesetzt. Das Ziel muss im Abschnitt compass definiert sein. Du kannst f\u00fcr jede Sprache einen eigenen Ziel-Namen setzten oder einen allgemeinen Namen setzen, und optional ein eigenes item hinzuf\u00fcgen (aus dem items Abschnitt) welches im Rucksack angezeigt wird. Beispiel f\u00fcr ein Kompassziel: compass : beton : name : de : Ziel en : Target pl : Cel location : 100;200;300;world item : scroll Example compass add beton","title":"Compass: compass"},{"location":"Documentation/Events-List/#command-command","text":"persistent , static F\u00fchrt den angegebenen Befehl von der Konsole aus. Gebe den Befehl OHNE Schr\u00e4gstrich an. Du kannst hier Variablen verwenden, aber andere Variablen als %player% werden nicht funktionieren, wenn das Event von einen verz\u00f6gerten folder Event ausgel\u00f6st wird und der Spieler offline ist. Du kannst zus\u00e4tzliche Befehle definieren, indem du sie mit dem Zeichen | trennst. Wenn du das Zeichen | in einen Befehl verwenden willst nutze \\| . Suchst du nach f\u00fchre ein Befehl aus Spieler aus ? Example command kill %player%|ban %player%","title":"Command: command"},{"location":"Documentation/Events-List/#conversation-conversation","text":"Startet ein Gespr\u00e4ch am Standort des Spielers. Das einzige Argument ist die ID der Konversation. Dies umgeht die Konversations-Permission! Example conversation village_smith","title":"Conversation: conversation"},{"location":"Documentation/Events-List/#damage-player-damage","text":"Verletzt den Spieler um die angegebene Schadensmenge. Das einzige Argument ist eine Zahl (kann Gleitkommazahlen haben). Example damage 20","title":"Damage player: damage"},{"location":"Documentation/Events-List/#delete-point-deletepoint","text":"persistent , static L\u00f6schst die Spielerpunkte in einer bestimmten Kategorie. Example deletepoint npc_attitude","title":"Delete Point: deletepoint"},{"location":"Documentation/Events-List/#door-door","text":"persistent , static Dieses Event kann T\u00fcren, Fallt\u00fcren und Zauntore \u00f6ffnen und schlie\u00dfen. Die Syntax ist genau dieselbe wie im obigen lever Event. Example door 100;200;300;world off","title":"Door: door"},{"location":"Documentation/Events-List/#remove-potion-effect-deleffect","text":"Entfernt die angegebenen Trankeffekte vom Spieler. Nutze any anstelle einer Liste von Typen, um alle Trankeffekte vom Spieler zu entfernen. Example deleffect ABSORPTION,BLINDNESS","title":"Remove Potion Effect: deleffect"},{"location":"Documentation/Events-List/#potion-effect-effect","text":"F\u00fcgt dem Spieler einen bestimmten Trankeffekt hinzu. Das erste Argument ist der Tranktyp. Sie finden alle verf\u00fcgbaren Typen hier . Das zweite Argument ist eine Ganzzahl, die definiert, wie lange der Effekt in Sekunden anh\u00e4lt. Das dritte Argument, ebenfalls ganzzahlig, definiert die St\u00e4rke des Effekts (1 bedeutet erstes Level). F\u00fcge einen Parameter ambient hinzu, um Trankpartikel unsichtbarer erscheinen zu lassen (genauso wie Beacon-Effekte). Um Partikel zu verbergen, f\u00fcgen Sie einen Parameter hidden hinzu. Um das Symbol f\u00fcr den Effekt auszublenden, f\u00fcgen Sie noicon hinzu. Example effect BLINDNESS 30 1 ambient icon","title":"Potion Effect: effect"},{"location":"Documentation/Events-List/#explosion-explosion","text":"static Erzeugt eine Explosion. Es kann Feuer machen und Bl\u00f6cke zerst\u00f6ren. Du kannst auch die Leistung definieren, also achte darauf, deinen Server nicht wegzublasen. Die Standard-TNT-Leistung ist 4, w\u00e4hrend Wither bei der Sch\u00f6pfung 7 ist. Das erste Argument kann 0 oder 1 sein und gibt an, ob die Explosion Feuer erzeugen wird (wie Geister Feuerball). Das zweite Argument ist auch 0 oder 1, aber dies definiert, ob der Block zerst\u00f6rt wird oder nicht. Das dritte Argument ist die Leistung (Float-Zahl). Das letzte Argument ist der Ort. Example explosion 0 1 4 100;64;-100;survival","title":"Explosion: explosion"},{"location":"Documentation/Events-List/#folder-folder","text":"persistent , static Es ist so etwas wie ein Container f\u00fcr mehrere Events. Du kannst es verwenden, um deinen Code zu versch\u00f6nern. Es verf\u00fcgt auch \u00fcber eine optionale Verz\u00f6gerung und einen in Sekunden gemessenen Zeitraum (Du kannst Ticks oder Minuten verwenden, indem du ticks oder minutes Argument hinzuf\u00fcgst). Es ist Konstant f\u00fcr Events markiert als persistent , was bedeutet, dass die Events auch nach dem Abmelden des Spielers ausgel\u00f6st werden. Beachten jedoch, dass alle Bedingungen falsch sind, wenn der Spieler offline ist (auch invertierte), diese Events sollten also nicht durch irgendwelche Bedingungen blockiert werden! Das einzige erforderliche Argument ist eine durch Kommas getrennte Liste von Events. Es gibt auch drei optionale Argumente: delay: , period: und random: . Delay und Period ist eine Anzahl von Sekunden. Delay ist die Zeit vor der Ausf\u00fchrung und period ist die Zeit zwischen den einzelnen Events. Es ist optional und es leer zu lassen ist dasselbe wie delay:0 oder period:0 . Random ist die Anzahl der Events, die zuf\u00e4llig zum Ausl\u00f6sen ausgew\u00e4hlt werden. Es ist optional und wenn du es leer l\u00e4sst oder wegl\u00e4sst, werden alle Events ausgel\u00f6st. Example folder event1,event2,event3 delay:5 period:5 random:1","title":"Folder: folder"},{"location":"Documentation/Events-List/#give-items-give","text":"Gibt dem Spieler vordefinierte Gegenst\u00e4nde. Sie werden genau so angegeben wie im item Abschnitt definiert. Es k\u00f6nnen mehrere Gegenst\u00e4nde auf einmal gegeben werden, indem man sie mit einen Komma trennt, au\u00dferdem kann jeder Gegenstand eine Anzahl haben angegeben durch : gefolgt von der Anzahl nach den Gegenstand. Die Standard-Anzahl ist 1. Wenn der Spieler nicht den erforderlichen Platz im Inventar hat, werden die Gegenst\u00e4nde auf den Boden fallen gelassen, es sei denn, es handelt sich um Questgegenst\u00e4nde. Dann werden sie in den Rucksack gesteckt. Du kannst dan Parameter notify angeben, um dem Spieler eine einfache Nachricht \u00fcber den Erhalt von Gegenst\u00e4nden anzuzeigen. Example give emerald:5,emerald_block:9","title":"Give Items: give"},{"location":"Documentation/Events-List/#give-journal-givejournal","text":"Dieses Event gibt dem Spieler einfach sein Tagebuch. Es verh\u00e4lt sich genauso wie der Befehl /j . Example givejournal","title":"Give journal: givejournal"},{"location":"Documentation/Events-List/#global-point-globalpoint","text":"persistent , static Dies funktioniert auf die gleiche Weise wie das normale Punkte-Event, aber anstatt die Punkte f\u00fcr eine Kategorie eines bestimmten Spielers zu manipulieren, manipuliert es Punkte in einer globalen Kategorie. Diese globalen Kategorien sind Spieler unabh\u00e4ngig, so kannst du zum Beispiel jedes Mal, wenn ein Spieler eine Quest macht, einen Punkt zu einer solchen globalen Kategorie hinzuf\u00fcgen und dem 100. Spieler, der die Quest macht, einige besondere Belohnungen geben. Example globalpoint global_knownusers 1","title":"Global point: globalpoint"},{"location":"Documentation/Events-List/#global-tag-globaltag","text":"persistent , static Funktioniert genauso wie ein normales Tag-Event, aber anstatt ein Tag f\u00fcr einen Spieler zu setzen, wird es global f\u00fcr alle Spieler gesetzt. Example globaltag add global_areNPCsAgressive","title":"Global tag: globaltag"},{"location":"Documentation/Events-List/#if-else-if","text":"Dieses Event pr\u00fcft eine Bedingung und f\u00fchrt je nach Ergebnis das erste oder zweite Event aus. Wird folgenderma\u00dfen definiert: if condition event1 else event2 , wobei condition eine Bedingung-ID ist und event1 und event2 Event-IDs sind. Das else Parameter ist ohne praktischen Grund zwischen den Events obligatorisch. Example if sonnig lass_es_regnen else lass_es_sonnig_sein","title":"If else: if"},{"location":"Documentation/Events-List/#journal-journal","text":"static F\u00fcgt einen Eintrag zum/aus dem Tagebuch eines Spielers hinzu oder l\u00f6scht ihn. Tagebucheintr\u00e4ge m\u00fcssen im Abschnitt journal definiert werden. Das erste Argument ist die auszuf\u00fchrende Aktion, der zweite ist der Name des Eintrags, falls erforderlich. Tagebucheintr\u00e4ge \u00e4ndern wird auch das Journal neu laden. M\u00f6gliche Aktionen sind: - add : F\u00fcgt dem Tagebuch eine Seite hinzu. - delete : L\u00f6scht eine Seite aus dem Tagebuch - update : L\u00e4d das Tagebuch neu. Dies ist besonders n\u00fctzlich, wenn du die Hauptseite aktualisieren musst. Example journal add quest_started journal delete quest_available journal update","title":"Journal: journal"},{"location":"Documentation/Events-List/#kill-kill","text":"T\u00f6tet den Spieler. Nichts anderes.","title":"Kill: kill"},{"location":"Documentation/Events-List/#kill-mobs-killmob","text":"persistent , static T\u00f6tet alle Mobs des angegebenen Typs am Ort. Erstes Argument ist die Art des Mobs . Das n\u00e4chste Argument ist der Ort. Drittes Argument ist der Radius um den Ort, in dem sich die Mobs aufhalten m\u00fcssen, um get\u00f6tet zu werden. Du kannst auch das Argument name: angeben, gefolgt vom Namen des Mobs, der get\u00f6tet werden soll. Alle _ -Zeichen werden durch Leerzeichen ersetzt. Wenn du nur Mobs t\u00f6ten m\u00f6chtest, die mit dem Spawn-Mob-Event markiert wurden, verwende marked: Argument gefolgt vom Schl\u00fcsselwort. Mit diesem Event k\u00f6nnen nur Mobs get\u00f6tet werden, die sich in geladenen Chunks befinden. Example killmob ZOMBIE 100;200;300;world 40 name:Bolec","title":"Kill Mobs: killmob"},{"location":"Documentation/Events-List/#language-event-language","text":"Dieses Event \u00e4ndert die Sprache des Spielers in die angegebene Sprache. Es gibt nur ein Argument, den Sprachnamen. Example language en","title":"Language Event: language"},{"location":"Documentation/Events-List/#lever-lever","text":"persistent , static Dieses Event kann einen Hebel umschalten. Das erste Argument ist ein Ort und das zweite ein Zustand: on , off oder toggle . Example lever 100;200;300;world toggle","title":"Lever: lever"},{"location":"Documentation/Events-List/#lightning-lightning","text":"static Schl\u00e4gt an einem bestimmten Ort einen Blitz ein. Einziges Argument ist der Standort. Example lightning 100;64;-100;survival","title":"Lightning: lightning"},{"location":"Documentation/Events-List/#notification-notify","text":"Zeigt eine Benachrichtigung mit dem NotifyIO-System an. Warning Alle Doppelpunkte ( : ) im Nachrichtenteil der Benachrichtigung m\u00fcssen maskiert werden, einschlie\u00dflich der Variablen. Ein Backslash ( \\ ) ist erforderlich, wenn \u00fcberhaupt keine Anf\u00fchrungszeichen ( ... ) verwendet werden oder einfache Anf\u00fchrungszeichen ( ... ). Zwei Backslash sind erforderlich ( \\\\ ) bei Verwendung von doppelten Anf\u00fchrungszeichen ( \"...\" ). Examples: eventName: notify Peter:Heya %player%! :arrow_right: eventName: notify Peter{++\\++}:Heya %player%! eventName: {=='==}notify Peter:Heya %player%!{=='==} :arrow_right: eventName: {=='==}notify Peter{++\\++}:Heya %player%!{=='==} eventName: {==\"==}notify Peter:Heya %player%!{==\"==} :arrow_right: eventName: {==\"==}notify Peter{++\\\\++}:Heya %player%!{==\"==} otherEvent: notify You own %math.calc:5% fish! :arrow_right: otherEvent: You own %math.calc{++\\++}:5% fish! Option Beschreibung message Die Nachricht, die angezeigt wird. Unterst\u00fctzt Variablen und \u00dcbersetzungen. Erforderlich, muss zuerst sein category L\u00e4dt alle Einstellungen aus dieser Benachrichtigungskategorie. Kann eine durch Kommas getrennte Liste sein. Die erste vorhandene Kategorie wird verwendet. Optional io irgendeine NotifyIO . \u00dcberschreibt die \u201eKategorie\u201c-Einstellungen. Optional NotifyIO Jede Einstellung aus dem definierten NotifyIO. Kann mehrfach verwendet werden. \u00dcberschreibt die \u201eKategorie\u201c-Einstellungen. Optional Die Standard NotifyIO ist chat , wenn kein anderes Argument als message angegeben ist. message ist das einzige Argument dieses Event, das nicht Schl\u00fcssel:Wert basierent ist. Du kannst dort beliebigen Text mit Leerzeichen hinzuf\u00fcgen. Es erm\u00f6glicht dir auch, mehrere \u00dcbersetzungen mit einer speziellen Syntax bereitzustellen: example : \"notify {en} ABC {de} DEF\" Der Wert in {} ist der Sprach-K\u00fcrzel definiert in der messages.yml. Jeder Text zwischen den Sprach-K\u00fcrzeln geh\u00f6rt zur Sprache des vorherigen Sprach-k\u00fcrzel. Zwischen dem Sprach-k\u00fcrzel und der Nachricht muss ein Leerzeichen stehen. In diesem Beispiel w\u00fcrden englische Benutzer ABC und deutsche DEF sehen.","title":"Notification: notify"},{"location":"Documentation/Events-List/#broadcast-notifyall","text":"Dieses Event funktioniert genauso wie notify Event, zeigt aber die Benachrichtigung f\u00fcr alle Online-Spieler an.","title":"Broadcast: notifyall"},{"location":"Documentation/Events-List/#objective-objective","text":"persistent , static Manages the objectives. Syntax is objective <action> name , where <action> can be start / add (one of the two), delete / remove or complete / finish . Name is the name of the objective, as defined in the objectives section. Using this in static contexts only works when removing objectives! Example objective start wood","title":"Objective: objective"},{"location":"Documentation/Events-List/#opsudo-opsudo","text":"Dieses Event ist \u00e4hnlich wie das sudo Event, der einzige Unterschied ist, dass es ein Befehl als Spieler mit tempor\u00e4re OP-Berechtigungen ausf\u00fchrt. Zus\u00e4tzliche Befehle k\u00f6nnen definiert werden, indem sie mit | getrennt werden. Wenn du ein | -Zeichen in der Nachricht verwenden m\u00f6chtest, verwende \\| . Suchst du nach f\u00fchre ein Befehl als normaler Spieler aus ? Suchst du nach f\u00fchre Befehle von der Konsole aus ? Example opsudo spawn","title":"OPsudo: opsudo"},{"location":"Documentation/Events-List/#party-event-party","text":"F\u00fchrt die angegebene Liste von Events (drittes Argument) f\u00fcr jeden Spieler in einer Party aus. Weitere Informationen zu Partys finden Sie im Kapitel party im Reference Abschnitt. Example party 10 has_tag1,!has_tag2 give_reward","title":"Party event: party"},{"location":"Documentation/Events-List/#pick-random-pickrandom","text":"persistent , static Ein weiterer Container f\u00fcr Events. Es w\u00e4hlt ein (oder mehrere) der gegebenen Events und f\u00fchrt sie aus. Du musst angeben wie wahrscheinlich es ist das jeweilige Event zu bekommen, indem du einen Prozentwert vor der Event-ID setzt. Dieses Event funktionert auch mit einem Gesamtprozentwert \u00fcber 100%. Es w\u00e4hlt Standardm\u00e4\u00dfig ein Event aus der Liste, aber du kannst das Argument amount: angeben, wenn du willst, dass mehrere ausgew\u00e4hlt werden. Beachte das nur so viele Events wie vorhanden ausgew\u00e4hlt werden k\u00f6nnen und amount:0 macht nichts. Es m\u00fcssen zwei %% vor dem Event-Name stehen, wenn Variablen verwendet werden, eins ist von der Variable und das andere ist von der Event-Syntax. Example pickrandom 20.5%event1,0.5%event2,79%event3 amount:2 pickrandom %point.factionXP.amount%%event1,0.5%event2,79%event3,1%event4 amount:3","title":"Pick random: pickrandom"},{"location":"Documentation/Events-List/#point-point","text":"persistent Gibt dem Spieler eine bestimmte Anzahl von Punkten in einer bestimmten Kategorie. Der Betrag kann negativ sein, wenn Sie Punkte abziehen m\u00f6chten. Sie k\u00f6nnen auch ein Sternchen zum Multiplizieren verwenden (oder Division, wenn Sie einen Bruch verwenden). Das erste Argument nach dem Event-Namen muss eine Kategorie sein, und das zweite - die Anzahl der Punkte, die vergeben/genommen/multipliziert werden sollen. Dieses Event unterst\u00fctzt auch ein optionales notify Argument, das Informationen \u00fcber die \u00c4nderung mithilfe des Benachrichtigungssystems anzeigt. Example point npc_attitude 10 Example point village_reputation *0.75","title":"Point: point"},{"location":"Documentation/Events-List/#run-events-run","text":"persistent , static Mit diesem Event kannst du mehrere Anweisungen in einer angeben. Jede Anweisungen muss mit einem ^ Zeichen starten (es trennt alle Anweisungen). Es ist nicht dasselbe wie das folder Event, weil du die eigentliche Anweisung angeben musst, nicht nur den Event-Namen. Es wird auch beim selben Tick gefeuert, nicht beim n\u00e4chsten wie bei folder . Verwenden Sie hier keine Bedingungen, es verh\u00e4lt sich seltsam. Wir werden dies in 2.0 beheben. Example run ^tag add beton ^give emerald:5 ^entry add beton ^kill","title":"Run events: run"},{"location":"Documentation/Events-List/#scoreboard-score","text":"Dieses Event funktioniert genauso wie das point -Event, der einzige Unterschied besteht darin, dass es Scoreboards anstelle von Punkten verwendet. Sie k\u00f6nnen Punktzahlen in Zielen auf der Anzeigetafel addieren, subtrahieren, multiplizieren und dividieren. Das erste Argument ist der Name des Ziels, das zweite eine Zahl. Es kann positiv f\u00fcr die Addition, negativ f\u00fcr die Subtraktion oder mit einem vorangestellten Sternchen f\u00fcr die Multiplikation sein. Das Multiplizieren mit Br\u00fcchen ist dasselbe wie das Dividieren. Example score kills 1","title":"Scoreboard: score"},{"location":"Documentation/Events-List/#set-block-setblock","text":"persistent , static \u00c4ndert den Block an der angegebenen Position. Das erste Argument ist ein Block , das zweite ein Ort. Sehr m\u00e4chtig, wenn es zum Ausl\u00f6sen von Redstone-Apparaten verwendet wird. Example setblock REDSTONE_BLOCK 100;200;300;world","title":"Set Block: setblock"},{"location":"Documentation/Events-List/#spawn-mob-spawn","text":"persistent , static Spawnt eine bestimmte Anzahl von Mobs eines bestimmten Typs am Ort. Das erste Argument ist ein Standort. Das n\u00e4chste ist die Art des Mobs . Das letzte, dritte Argument ist eine Ganzzahl f\u00fcr die Menge der zu spawnenden Mobs. Sie k\u00f6nnen auch das Argument name: angeben, gefolgt vom Namen des Mobs. Alle _ Zeichen werden mit Leerzeichen ersetzt. Sie k\u00f6nnen den gespawnten Mob auch mit einem Schl\u00fcsselwort markieren, indem Sie das Argument marked: verwenden. Es wird nirgendwo angezeigt, und Sie k\u00f6nnen im Ziel mobkill nun nach markierten Mobs suchen. Sie k\u00f6nnen die R\u00fcstung angeben, die der Mob tragen wird, und die Gegenst\u00e4nde, mit denen er ausgestattet ist h: (Helm), c: (Brustpanzer), l: (Hose), b: (Schuhe), m: (Haupt Hand) and o: (Neben Hand) optionale Argumente. Dies nimmt ein Gegenstand ohne die Anzahl, so wie in dem items Abschnitt definiert. Du kannst auch eine Liste von fallen gelassenen Gegenst\u00e4nden mit dem Argument drops: definieren, gefolgt von einer Liste mit Gegenst\u00e4nden mit Anzahl nach Doppelpunkt, geteilt durch Komma. Example spawn 100;200;300;world SKELETON 5 marked:targets Example spawn 100;200;300;world ZOMBIE name:Bolec 1 h:blue_hat c:red_vest drops:emerald:10,bread:2","title":"Spawn Mob: spawn"},{"location":"Documentation/Events-List/#sudo-sudo","text":"Dieses Event ist \u00e4hnlich wie das command Event, der einzige Unterschied ist, dass es einen Befehl als Spieler ausl\u00f6st (oft als Spielerbefehle bezeichnet). Zus\u00e4tzliche Befehle k\u00f6nnen definiert werden, indem sie mit | getrennt werden. Wenn du das Zeichen | in einen Befehl nutzen willst nutze \\| . Suchst du nach f\u00fchre einen Befehl als OP aus ? Suchst du nach Konsolen Befehl ? Example sudo spawn","title":"Sudo: sudo"},{"location":"Documentation/Events-List/#tag-tag","text":"persistent , static Dieses Event f\u00fcgt dem Spieler ein Tag hinzu (oder entfernt es). Das erste Argument nach dem Namen des Events muss add oder del sein. Als n\u00e4chstes kommt der Tag-Name. Es darf keine Leerzeichen enthalten ( _ jedoch ist okay). Zus\u00e4tzliche Tags k\u00f6nnen durch Kommas getrennt (ohne Leerzeichen) hinzugef\u00fcgt werden. Example tag add quest_started,new_entry","title":"Tag: tag"},{"location":"Documentation/Events-List/#take-items-take","text":"Entfernt Gegenst\u00e4nde aus dem Inventar, den R\u00fcstungsf\u00e4chern oder dem Rucksack des Spielers. Die Gegenst\u00e4nde selbst m\u00fcssen im Abschnitt items definiert werden, optional mit Anzahl nach einem Doppelpunkt. Welche Inventar typen gepr\u00fcft werden, wird durch invOrder: definiert. Du kannst Backpack , Inventory , Offhand und Armor hier verwenden. Sind mehrere Typen definiert, wird nacheinander gepr\u00fcft. Danger Hinweis: Wenn es sich bei den Items nicht um Quest-Items handelt, verwenden Sie in Gespr\u00e4chen kein take -Event mit Spieleroptionen! Der Spieler kann Gegenst\u00e4nde fallen lassen, bevor er die Option ausw\u00e4hlt, und sie nach dem Ausl\u00f6sen des Events aufheben. Best\u00e4tigen Sie es anhand der Reaktion des NPCs! Du kannst auch das Schl\u00fcsselwort notify angeben, um dem Spieler eine einfache Nachricht \u00fcber den Verlust von Gegenst\u00e4nden anzuzeigen. Example take emerald:120,sword take nugget:6 notify take wand notify invOrder:Backpack take money:50 invOrder:Backpack,Inventory take armor invOrder:Armor,Offhand,Inventory,Backpack","title":"Take Items: take"},{"location":"Documentation/Events-List/#time-time","text":"Stellt die Zeit ein oder f\u00fcgt sie hinzu. Das einzige Argument ist die festzulegende Zeit (Ganzzahl) oder die hinzuzuf\u00fcgende Zeit (Ganzzahl mit vorangestelltem +), in 24 Stunden Format. Das Subtrahieren von Zeit erfolgt durch Hinzuf\u00fcgen von mehr Zeit (wenn Sie daran denken, macht es tats\u00e4chlich Sinn). Minuten k\u00f6nnen mit Flie\u00dfkomma erreicht werden. Example time +6","title":"Time: time"},{"location":"Documentation/Events-List/#teleport-teleport","text":"Teleportiert den Spieler an einen bestimmten Ort, mit oder ohne Kopfdrehung. Es wird auch das Gespr\u00e4ch beenden, wenn der Spieler eins aktiv hat. Das erste und einzige Argument muss der Ort sein. Es ist eine gute Idee hier yaw und pitch zu verwenden. Example teleport 123;32;-789;world_the_nether;180;45","title":"Teleport: teleport"},{"location":"Documentation/Events-List/#variable-variable","text":"Dieses Event hat nur einen Zweck: Werte \u00e4ndern, die in variable Ziele gespeichert sind. Das erste Argument ist die ID des variable Ziels. Das zweite Argument ist der Name der zu setzenden Variablen. Das dritte Argument ist die Wert zum einzustellen. Sowohl der Name als auch der Wert k\u00f6nnen %...% -Variablen verwenden. Um eine Variable zu l\u00f6schen, k\u00f6nnen Sie \"\" verwenden. Sieh dir die variable objective Dokumentation f\u00fcr weitere Informationen zum Speichern von Variablen an. Dieses Event hat keine Auswirkung, wenn dem Spieler nicht bereits ein variable Ziel zugewiesen wurde. Example variable CustomVariable MyFirstVariable Goodbye! variable variable_objectiveID name %player% variable other_var_obj desc \"\"","title":"Variable: variable"},{"location":"Documentation/Events-List/#weather-weather","text":"Stellt das Wetter ein. Das Argument ist sun , rain oder storm . Example weather rain","title":"Weather: weather"},{"location":"Documentation/Events-List/#give-experience-experience","text":"Gibt dem Spieler die angegebene Menge an Erfahrungspunkten. Du kannst auch ganze Level geben, idem du das Argument level hinzuf\u00fcgst. Example experience 4 level","title":"Give experience: experience"},{"location":"Tutorials/tutorial/","text":"YAML Syntax BetonQuest nutzt f\u00fcr alle seine Dateien YAML (YAML Ain\u2019t Markup Language).","title":"\ud83d\udcd1 Tutorials"},{"location":"Tutorials/tutorial/#yaml-syntax","text":"BetonQuest nutzt f\u00fcr alle seine Dateien YAML (YAML Ain\u2019t Markup Language).","title":"YAML Syntax"}]}